<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://kit.fontawesome.com/2337335750.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="style.css" />

  <script>  
      var lB = [];
      var uB = [];
      var p = [];
      const data3 = [
                      ["Weight Range","Price"] 
                  ];
      function getTable_ () {
        var bracketContain = document.getElementById('my-div2');
        var bracket = document.querySelectorAll('.data');
        var key = bracketContain.getElementsByTagName('h1');
        for (var u = 0; u < key.length; u++ ){ 
          let match = bracket[u].getElementsByTagName('h1')[0];
          let lowerBound = bracket[u].getElementsByTagName('h2')[0];
          let upperBound = bracket[u].getElementsByTagName('h3')[0];
          let price = bracket[u].getElementsByTagName('h4')[0];
        if (match) {
          let textvalue = match.textContent || match.innerHTML;
          let lowerTxt = lowerBound.textContent || lowerBound.innerHTML;
          let upperTxt = upperBound.textContent || upperBound.innerHTML;
          let priceTxt = price.textContent || price.innerHTML;
          let lower = parseInt(lowerTxt);
          let upper = parseInt(upperTxt,10);
          let pri = parseFloat(priceTxt);
          console.log("lower bound: " + lower);
          console.log("upper bound: " + upper);
          console.log("price: " + pri);
          lB[u] = lower;
          uB[u] = upper;
          p[u] = pri;
        }
        console.log(uB, lB, p);
      }
        
      }
      function bldDat() {
        let j = 1;
        for (let i = lB.length; i != 0; i--) {
          data3[j] = [lB[j-1] + " to " + uB[j-1], "$" + p[j-1]];
          j++;
        };
      }
      
      function getCells(data, type) {
        return data.map(cell => `<${type} class = "cell">${cell}</${type}>`).join('');
      }
      
      function createBody(data) {
        return data.map(row => `<tr>${getCells(row, 'td')}<td class= "removeRow"><button id="button" style="background: transparent; border: none"><i class="fa-solid fa-trash" style="font-size: 22px;"></i></button></td></tr>`).join('');
      }
      function createTable(data) {
        // Destructure the headings (first row) from
        // all the rows
        const [headings, ...rows] = data;
        // Return some HTML that uses `getCells` to create
        // some headings, but also to create the rows
        // in the tbody.
        return `
          <table class = "table">
            <thead style="color: #23395d;">${getCells(headings, 'th')}</thead>
            <tbody>${createBody(rows)}</tbody>
          </table>`;
      }
      	
      function weightBracket() {
        const upperBound = document.getElementById('upperBound').value;
        const price = document.getElementById('price').value;
        let uprBnd = parseInt(upperBound,10);
        let pri = parseFloat(price);
        let i = uB.length;
        for (let a = 0; a < i; a++ ) {
          if (uprBnd === uB[a]) {
            console.log(uprBnd);
            console.log(uB[a]);
            console.log(pri);
            console.log(p[a]);
            p[a] = pri;
            lB.sort((a, b) => a - b);
            uB.sort((a, b) => a - b);
            bldDat();
        		document.getElementById("my-div").innerHTML = createTable(data3);
            return;
          }
         }
        if (uprBnd > uB[i - 1]) {
          lB[i] = uB[i - 1];
          console.log("1:  " + lB);
          uB[i] = uprBnd;
          p[i] = pri;
        } else if (uprBnd < uB[i - 1]) {  
          lB[i] = uprBnd;
          uB[i] = uprBnd;
          p[i] = pri;
          lB.sort((a, b) => a - b);
          uB.sort((a, b) => a - b); 
          let index = uB.indexOf(uprBnd);
          p[i] = p[index];
          p[index] = pri;
          console.log("2: "+ lB);
        } else {
          return;
        } 
       console.log(uB);
       console.log(lB);
       console.log(p);
      lB.sort((a, b) => a - b);
      uB.sort((a, b) => a - b);  
      bldDat();
      document.getElementById("my-div").innerHTML = createTable(data3);
      }
    
    </script>

    <style>
      .container {
        max-width: 1600px;
        display: flex;
        flex-direction: column;
        align-items: center;
      }
      .btn-cnt {
        display: flex;
        flex-direction: column;
        justify-items: center;
      }
      .btn {
        height: 75px;
        display: flex;
        flex-direction: row;
        align-items: center;
      }
      .btn input {
        width: 275px;
        margin-top: 2px;
      }
      .btn button {
        width: 35px;
        margin-left: 10px;
        color: #23395d;
      }
      .btn button i {
        padding: 5px 8px 5px 8px;
        cursor: pointer;
      }
      .btn button i:hover {
        background-color: #23395d;
        color: white;
      }
      .table {
        text-align: center;
        font-size: 20px;
      }
      .table tr:hover {
        transform: scale(1.02);
      }
      .table td {
        padding: 10px;
        padding-left: 20px;
        padding-right: 20px;
      }
      .table-container {
        display: flex;
        flex-direction: column;
        align-items: center;
      }
      .order-container {
        margin-top: 35px;
      }

      .order-container h1 {
        color: #23395d;
        font-size: 25px;
        padding-bottom: 7px;
      }

      .order-container table {
      border: 1px solid black;
      border-collapse: collapse;
      width: 1000px;
      }
      .order-container table th{
        color: #23395d;
        padding-left: 8px;
        text-align: left;
        border: 1px solid black;
        border-collapse: collapse;
      }

      .order-container table td{
        padding-left: 8px;
        text-align: left;
        border: 1px solid black;
        border-collapse: collapse;
      }


      header {
        background-color: white;
      }
      .cell {
        width: 200px;
      }
      .removeRow {
        width: 90px;
        margin-right: 50px;
      }
      .removeRow i {
        color: #23395d;
      }


      .dropbtn {
        color: #23395d;
        padding: 5px 10px 5px 10px;
        margin-bottom: 10px;
        font-size: 17px;
        border: none;
      }
      .dropdown {
        position: relative;
        display: inline-block;
      }
      .btn2 {
        display: none;
        position: absolute;
        background-color: #f1f1f1;
        min-width: 160px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;
      }

      .btn2 button {
        width: 100%;
      }

      /* Links inside the dropdown */
      .btn2 a {
        color: black;
        padding: 12px 16px;
        text-decoration: none;
        display: block;
      }

      /* Change color of dropdown links on hover */
      .btn2 a:hover {background-color: #ddd;}

      /* Show the dropdown menu on hover */
      .dropdown:hover .btn2 {display: block;}

      /* Change the background color of the dropdown button when the dropdown content is shown */
      .dropdown:hover .dropbtn {background-color: #3e8e41;}
    </style>
    <title>ADMIN | Motor Medic</title>
  </head>
  <body>
    <header>
    <div class="emp-nav">
      <nav>
        <div class="menu">
          <div class="logo">
            <a href="/"
              ><img
                style="width: 50%"
                src="img/motor-medic-logo.png"
                alt="Motor Medic"
            /></a>
          </div>
          <ul>
            <li><a href="/associate">Home</a></li>
            <li><a href="#">Workstation</a></li>
            <li><a href="/receiving">Receiving</a></li>
            <li><a href="/admin">Admin</a></li>
          </ul>
        </div>
      </nav>
    </div>
  </header>

    <div class="container">
      <div class="btn-cnt">
        <div class="btn">
          <input type="text" name="upperBound" id="upperBound" placeholder="Upper Bound"/>
          <input type="text" name="price" id="price" placeholder="Price" style="margin-left: 20px;"/>
          <button id="button" style="background: transparent; border: none"><i class="fa-regular fa-plus" style="font-size: 24px;"></i></button>
        </div>
      </div>
      <div class= "table-container" id = "my-div"></div>
      <div class="order-container">
        <h1>Orders :</h1>
        <script>
          function viewAuthorized() {
            console.log("CLICKED VIEW AUTHORIZED");
            const orderContain = document.getElementById('my-div3');
            const order_= document.querySelectorAll('.authorized');
            const authorized_ = orderContain.getElementsByTagName('p');

            for( let i = 0; i < authorized_.length; i++ ){
            let authorizedOrd = order_[i].getElementsByTagName('p')[0];
                if(authorizedOrd) {  

                let text = authorizedOrd.textContent || authorizedOrd.innerHTML;
                console.log("IN AUTHORIZEDORD: "  + text)
                if(text === "Not Authorized") {
                  order_[i].style.display = ' ';
                } else {
                  order_[i].style.display = 'none';
                }
              }
            }
          }
        </script>
        <div class="dropdown">
          <button class="dropbtn">Filter</button>
          <div class="btn2">
            <button onclick="viewAuthorized();">View Authorized</button></form>
            <button onclick="viewNotAuthorized();">View Not Authorized</button></form>
            <form onclick="viewShipped();"><button type="submit">View Shipped</button></form>
            <button onclick="viewNotShipped();" >View Not Shipped</button></form>
          </div>
        </div>
        
        <table id = "myTable">
          <thead>
            <tr>
              <th>Date: </th>
              <th>Order ID:</th>
              <th>Customer:</th>
              <th>Customer Email:</th>
              <th>Order Subtotal:</th>
              <th>Authorized?</th>
              <th>Shipped?</th>
            </tr>
          </thead>
          <div class="my-div3" id= "my-div3">
          <% orders_.forEach((orders) => { %>
          <div class="ordrs" id="ordrs">
           <tr> 
          <td ><%= orders.date  %> </td>
          <td ><%= orders.oid %> </td>
          <td ><%= orders.name  %> </td>
          <td><%= orders.email  %> </td>
          <td><%= orders.subtotal  %> </td>
          <td class="authorized"><p><%= orders.authorized  %> <p></td>
          <td><%= orders.shipped %> </td>
        </tr>
        </div>
          <% }) %>
        </div>
        </table> 
      </div>
      <div id="my-div2">
        <% all.forEach((feeBracket) =>  { %>
          <div class="data" id= "data"> 
            <h1 id="key" style="visibility: hidden;"><%= feeBracket.key  %> </h1>
            <h2 id="lB" style="visibility: hidden;"><%= feeBracket.lowerBnd %> </h2>
            <h3 id="uB" style="visibility: hidden;"><%= feeBracket.upperBnd %> </h3>
            <h4 id="p" style="visibility:  hidden;"><%=  feeBracket.price %> </h4>
          </div>
        <%  }) %>
      </div>
      <script> 
        document.getElementById("button").addEventListener("click", weightBracket);		
        let myDiv = document.getElementById("my-div");
        getTable_();
        bldDat();
        myDiv.innerHTML = createTable(data3);
      </script>
    </div>

    <main>
      <div class="main-container"></div>
    </main>
  </body>
</html>